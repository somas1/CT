library(dplyr)
trainingData <- read.csv('spaceship-titanic/train.csv')
trainingData
shape <- dim(trainingData)
print(shape)
summary_stats <- summary(trainingData)
print(summary_stats)
head(trainingData)
str(trainingData)
#trainingData$Transported
table(trainingData[['Transported']])
x_labels <- factor(trainingData$Transported, levels = c(FALSE, TRUE))
#xlabels <- (FALSE TRUE)
bar_colors <- c("red","blue")
y_values <- table(trainingData$Transported)
#barplot(y_values, col = bar_colors)
# Add labels to the bars
text(x = barplot(y_values, col = bar_colors), y = y_values, labels = y_values, pos = 3, cex = 0.8)
library(ggplot2)
ggplot(trainingData, aes(x = FoodCourt)) + geom_histogram(fill = 'blue', bins = 50)
# calculate the number of missing values in each column
missing_values <- colSums(is.na(trainingData))
# sort missing values in descending order
sorted_missing_values <- sort(missing_values, decreasing = TRUE)
print(sorted_missing_values)
ggplot(trainingData, aes(x = Age)) + geom_histogram(fill = 'blue', bins = 50)
ggplot(trainingData, aes(x = ShoppingMall)) + geom_histogram(fill = 'blue', bins = 50)
ggplot(trainingData, aes(x = Spa)) + geom_histogram(fill = 'blue', bins = 50)
ggplot(trainingData, aes(x = Spa)) + geom_histogram(fill = 'blue', bins = 50)
ggplot(trainingData, aes(x = VRDeck)) + geom_histogram(fill = 'blue', bins = 50)
# calculate the number of missing values in each column
missing_values <- colSums(is.na(trainingData))
# sort missing values in descending order
sorted_missing_values <- sort(missing_values, decreasing = TRUE)
print(sorted_missing_values)
#trainingData[['Cabin']]
summary(trainingData[['Cabin']])
summary(trainingData[['Age']])
summary(trainingData[['VIP']])
#trainingData[['VIP']]
summary(trainingData[['Transported']])
trainingData$Transported <- trainingData$Transported == "True"
trainingData[['Transported']]
trainingData$Transported <- trainingData$Transported == "True"
summary(trainingData[['Transported']])
transported <- suppressWarnings({trainingData %>%
group_by(Transported) %>%
summarise_all(list(mean = mean, sd = sd, min = min, max = max))})
print(transported)
trainingData$Transported <- trainingData$Transported == "True"
summary(trainingData[['Transported']])
trainingData[['Transported']]
summary(trainingData[['Transported']])
trainingData <- read.csv('spaceship-titanic/train.csv')
trainingData
shape <- dim(trainingData)
print(shape)
summary_stats <- summary(trainingData)
print(summary_stats)
head(trainingData)
str(trainingData)
#trainingData$Transported
table(trainingData[['Transported']])
x_labels <- factor(trainingData$Transported, levels = c(FALSE, TRUE))
#xlabels <- (FALSE TRUE)
bar_colors <- c("red","blue")
y_values <- table(trainingData$Transported)
#barplot(y_values, col = bar_colors)
# Add labels to the bars
text(x = barplot(y_values, col = bar_colors), y = y_values, labels = y_values, pos = 3, cex = 0.8)
# calculate the number of missing values in each column
missing_values <- colSums(is.na(trainingData))
# sort missing values in descending order
sorted_missing_values <- sort(missing_values, decreasing = TRUE)
print(sorted_missing_values)
#trainingData[['Cabin']]
summary(trainingData[['Cabin']])
summary(trainingData[['Age']])
summary(trainingData[['VIP']])
#trainingData[['VIP']]
summary(trainingData[['Transported']])
trainingData$Transported <- as.logical(trainingData$Transported == "True")
summary(trainingData[['Transported']])
trainingData[['Transported']]
trainingData$Transported <- as.logical(trainingData$Transported == "True")
summary(trainingData[['Transported']])
#trainingData[['Transported']]
trainingData$Transported <- as.logical(trainingData$Transported == "True")
summary(trainingData[['Transported']])
#trainingData[['Transported']]
trainingData$Transported <- as.logical(trainingData$Transported == "True")
summary(trainingData[['Transported']])
trainingData[['Transported']]
summary(trainingData[['Transported']])
trainingData <- read.csv('spaceship-titanic/train.csv')
trainingData
summary(trainingData[['Transported']])
trainingData$Transported <- ifelse(trainingData$Transported == "True", TRUE, FALSE)
summary(trainingData[['Transported']])
trainingData[['Transported']]
trainingData$Transported <- ifelse(trainingData$Transported == "True", TRUE, FALSE)
summary(trainingData[['Transported']])
#trainingData[['Transported']]
trainingData <- read.csv('spaceship-titanic/train.csv')
trainingData
summary(trainingData[['Transported']])
trainingData$Transported <- as.logicaltrainingData$Transported == "True")
trainingData$Transported <- as.logical(trainingData$Transported == "True")
summary(trainingData[['Transported']])
trainingData[['Transported']]
trainingData <- read.csv('spaceship-titanic/train.csv')
trainingData
summary(trainingData[['Transported']])
trainingData$Transported <- as.logical(trainingData$Transported == "True")
summary(trainingData[['Transported']])
#trainingData[['Transported']]
transported <- suppressWarnings({trainingData %>%
group_by(Transported) %>%
summarise_all(list(mean = mean, sd = sd, min = min, max = max))})
print(transported)
mean_age <- mean(trainingData[['Age']], na.rm = TRUE)
mean_age
transported_df <- trainingData[trainingData$Transported == TRUE,]
not_transported_df <- trainingData[trainingData$Transported == FALSE,]
mean_age_transported <- mean(transported_df$Age, na.rm = TRUE)
mean_age_not_transported <- mean(not_transported_df$Age, na.rm = TRUE)
mean_age_transported
mean_age_not_transported
mean_age_transported
transported_df <- trainingData %>%
group_by(Transported) %>%
summarise(
Mean = mean(Transported, na.rm = TRUE),
Median = median(Transported, na.rm = TRUE),
Minimum = min(Transported, na.rm = TRUE),
Maximum = max(Transported, na.rm = TRUE),
Count = n(),
.groups = "rowwise"
)
transported_df
class(trainingData[['Transported']])
trainingData
transported_df <- trainingData %>%
group_by(Transported) %>%
summarise(
Mean = mean(trainingData[['Age']], na.rm = TRUE),
Median = median(Transported, na.rm = TRUE),
Minimum = min(Transported, na.rm = TRUE),
Maximum = max(Transported, na.rm = TRUE),
Count = n(),
.groups = "rowwise"
)
transported_df
class(trainingData[['Transported']])
trainingData
transported_df <- trainingData %>%
group_by(Transported) %>%
summarise(
Mean = mean(Transported[['Age']], na.rm = TRUE),
Median = median(Transported, na.rm = TRUE),
Minimum = min(Transported, na.rm = TRUE),
Maximum = max(Transported, na.rm = TRUE),
Count = n(),
.groups = "rowwise"
)
transported <- suppressWarnings({trainingData %>%
group_by(Transported) %>%
summarise_all(list(mean = mean, sd = sd, min = min, max = max))})
print(transported)
transported <- suppressWarnings({trainingData %>%
group_by(Transported) %>%
summarise_all(list(mean = mean, sd = sd, min = min, max = max))})
transported
transported <- suppressWarnings({trainingData %>%
group_by(Transported) %>%
summarise_all(list(mean = mean, sd = sd, min = min, max = max))})
transported
transported_df <- trainingData[trainingData$Transported == TRUE]
transported_df <- trainingData[trainingData$Transported == TRUE,]
not_transported_df <- trainingData[trainingData$Transported == FALSE,]
mean_age_transported <- mean(transported_df$Age, na.rm = TRUE)
mean_age_not_transported <- mean(not_transported_df$Age, na.rm = TRUE)
mean_age_transported
mean_age_not_transported
transported_df <- trainingData %>%
group_by(Transported) %>%
summarise(
Mean = mean(Transported[['Age']], na.rm = TRUE),
Median = median(Transported, na.rm = TRUE),
Minimum = min(Transported, na.rm = TRUE),
Maximum = max(Transported, na.rm = TRUE),
Count = n(),
.groups = "rowwise"
)
transported_df <- trainingData %>%
group_by(Transported) %>%
summarise(
Mean = mean(subset(trainingData, Transported == TRUE), na.rm = TRUE),
Median = median(Transported, na.rm = TRUE),
Minimum = min(Transported, na.rm = TRUE),
Maximum = max(Transported, na.rm = TRUE),
Count = n(),
.groups = "rowwise"
)
mean_age_not_transported
mean_age_transported
trainingData$Transported <- as.logical(trainingData$Transported == "True")
summary(trainingData[['Transported']])
#trainingData[['Transported']]
trainingData <- read.csv('spaceship-titanic/train.csv')
trainingData
trainingData$Transported <- as.logical(trainingData$Transported == "True")
summary(trainingData[['Transported']])
#trainingData[['Transported']]
mean_age <- mean(trainingData[['Age']], na.rm = TRUE)
mean_age
mean_age_transported
mean_age_not_transported
transported_df <- trainingData %>%
group_by(Transported) %>%
summarise(
Mean = mean(trainingData[trainingData$Transported == TRUE]), na.rm = TRUE),
transported_df <- trainingData %>%
group_by(Transported) %>%
summarise(
Mean = mean(trainingData[trainingData$Transported == TRUE]) na.rm = TRUE),
transported_df <- trainingData %>%
group_by(Transported) %>%
summarise(
Mean = mean(trainingData[trainingData$Transported == TRUE]), na.rm = TRUE),
transported_df <- trainingData %>%
group_by(Transported) %>%
summarise(
Mean = mean(trainingData[[trainingData$Transported == TRUE]]), na.rm = TRUE),
transported_df <- trainingData %>%
group_by(Transported) %>%
summarise(
Mean = mean(trainingData[trainingData$Transported == TRUE]) na.rm = TRUE),
transported_df <- trainingData %>%
group_by(Transported) %>%
summarise(
Mean = mean(subset(trainingData, Transported == TRUE), na.rm = TRUE),
Median = median(Transported, na.rm = TRUE),
Minimum = min(Transported, na.rm = TRUE),
Maximum = max(Transported, na.rm = TRUE),
Count = n(),
.groups = "rowwise"
)
